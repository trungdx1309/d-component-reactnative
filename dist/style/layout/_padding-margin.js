import { StyleSheet } from "react-native";
import AppSizes from "../constant/AppSizes";
import { generateStyleValue } from "../modifier";
const {
  paddingTiny,
  paddingXSml,
  paddingMedium,
  paddingXXLarge
} = AppSizes;
export const PADDING_KEY_PATTERN = new RegExp(`p[ltrbxy]?-([0-9]*)`);
export const PADDING_VARIATIONS = {
  p: "padding",
  pl: "paddingLeft",
  pt: "paddingTop",
  pr: "paddingRight",
  pb: "paddingBottom",
  px: "paddingHorizontal",
  py: "paddingVertical"
};
const MARGIN_VARIATIONS = {
  m: "margin",
  ml: "marginLeft",
  mt: "marginTop",
  mr: "marginRight",
  mb: "marginBottom",
  mx: "marginHorizontal",
  my: "marginVertical"
};
export const MARGIN_PADDING_VALUES = {
  0: 0,
  1: paddingTiny,
  2: paddingXSml,
  3: paddingMedium,
  4: paddingXXLarge
};
const paddingClass = generateStyleValue(PADDING_VARIATIONS, MARGIN_PADDING_VALUES);
const marginClass = generateStyleValue(MARGIN_VARIATIONS, MARGIN_PADDING_VALUES);
const marginPadding = StyleSheet.create({ ...paddingClass,
  ...marginClass
});
export default marginPadding;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZS9sYXlvdXQvX3BhZGRpbmctbWFyZ2luLnRzIl0sIm5hbWVzIjpbIlN0eWxlU2hlZXQiLCJBcHBTaXplcyIsImdlbmVyYXRlU3R5bGVWYWx1ZSIsInBhZGRpbmdUaW55IiwicGFkZGluZ1hTbWwiLCJwYWRkaW5nTWVkaXVtIiwicGFkZGluZ1hYTGFyZ2UiLCJQQURESU5HX0tFWV9QQVRURVJOIiwiUmVnRXhwIiwiUEFERElOR19WQVJJQVRJT05TIiwicCIsInBsIiwicHQiLCJwciIsInBiIiwicHgiLCJweSIsIk1BUkdJTl9WQVJJQVRJT05TIiwibSIsIm1sIiwibXQiLCJtciIsIm1iIiwibXgiLCJteSIsIk1BUkdJTl9QQURESU5HX1ZBTFVFUyIsInBhZGRpbmdDbGFzcyIsIm1hcmdpbkNsYXNzIiwibWFyZ2luUGFkZGluZyIsImNyZWF0ZSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsVUFBVCxRQUEyQixjQUEzQjtBQUNBLE9BQU9DLFFBQVA7QUFDQSxTQUFTQyxrQkFBVDtBQUVBLE1BQU07QUFBRUMsRUFBQUEsV0FBRjtBQUFlQyxFQUFBQSxXQUFmO0FBQTRCQyxFQUFBQSxhQUE1QjtBQUEyQ0MsRUFBQUE7QUFBM0MsSUFBOERMLFFBQXBFO0FBRUEsT0FBTyxNQUFNTSxtQkFBbUIsR0FBRyxJQUFJQyxNQUFKLENBQVkscUJBQVosQ0FBNUI7QUFFUCxPQUFPLE1BQU1DLGtCQUFrQixHQUFHO0FBQ2hDQyxFQUFBQSxDQUFDLEVBQUUsU0FENkI7QUFFaENDLEVBQUFBLEVBQUUsRUFBRSxhQUY0QjtBQUdoQ0MsRUFBQUEsRUFBRSxFQUFFLFlBSDRCO0FBSWhDQyxFQUFBQSxFQUFFLEVBQUUsY0FKNEI7QUFLaENDLEVBQUFBLEVBQUUsRUFBRSxlQUw0QjtBQU1oQ0MsRUFBQUEsRUFBRSxFQUFFLG1CQU40QjtBQU9oQ0MsRUFBQUEsRUFBRSxFQUFFO0FBUDRCLENBQTNCO0FBVVAsTUFBTUMsaUJBQWlCLEdBQUc7QUFDeEJDLEVBQUFBLENBQUMsRUFBRSxRQURxQjtBQUV4QkMsRUFBQUEsRUFBRSxFQUFFLFlBRm9CO0FBR3hCQyxFQUFBQSxFQUFFLEVBQUUsV0FIb0I7QUFJeEJDLEVBQUFBLEVBQUUsRUFBRSxhQUpvQjtBQUt4QkMsRUFBQUEsRUFBRSxFQUFFLGNBTG9CO0FBTXhCQyxFQUFBQSxFQUFFLEVBQUUsa0JBTm9CO0FBT3hCQyxFQUFBQSxFQUFFLEVBQUU7QUFQb0IsQ0FBMUI7QUFVQSxPQUFPLE1BQU1DLHFCQUFxQixHQUFHO0FBQ25DLEtBQUcsQ0FEZ0M7QUFFbkMsS0FBR3RCLFdBRmdDO0FBR25DLEtBQUdDLFdBSGdDO0FBSW5DLEtBQUdDLGFBSmdDO0FBS25DLEtBQUdDO0FBTGdDLENBQTlCO0FBWVAsTUFBTW9CLFlBQVksR0FBR3hCLGtCQUFrQixDQUNyQ08sa0JBRHFDLEVBRXJDZ0IscUJBRnFDLENBQXZDO0FBS0EsTUFBTUUsV0FBVyxHQUFHekIsa0JBQWtCLENBQ3BDZSxpQkFEb0MsRUFFcENRLHFCQUZvQyxDQUF0QztBQUtBLE1BQU1HLGFBQWEsR0FBRzVCLFVBQVUsQ0FBQzZCLE1BQVgsQ0FBa0IsRUFDdEMsR0FBR0gsWUFEbUM7QUFFdEMsS0FBR0M7QUFGbUMsQ0FBbEIsQ0FBdEI7QUFLQSxlQUFlQyxhQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcbmltcG9ydCBBcHBTaXplcyBmcm9tIFwiLi4vY29uc3RhbnQvQXBwU2l6ZXNcIjtcbmltcG9ydCB7IGdlbmVyYXRlU3R5bGVWYWx1ZSB9IGZyb20gXCIuLi9tb2RpZmllclwiO1xuXG5jb25zdCB7IHBhZGRpbmdUaW55LCBwYWRkaW5nWFNtbCwgcGFkZGluZ01lZGl1bSwgcGFkZGluZ1hYTGFyZ2UgfSA9IEFwcFNpemVzO1xuXG5leHBvcnQgY29uc3QgUEFERElOR19LRVlfUEFUVEVSTiA9IG5ldyBSZWdFeHAoYHBbbHRyYnh5XT8tKFswLTldKilgKTtcblxuZXhwb3J0IGNvbnN0IFBBRERJTkdfVkFSSUFUSU9OUyA9IHtcbiAgcDogXCJwYWRkaW5nXCIsXG4gIHBsOiBcInBhZGRpbmdMZWZ0XCIsXG4gIHB0OiBcInBhZGRpbmdUb3BcIixcbiAgcHI6IFwicGFkZGluZ1JpZ2h0XCIsXG4gIHBiOiBcInBhZGRpbmdCb3R0b21cIixcbiAgcHg6IFwicGFkZGluZ0hvcml6b250YWxcIixcbiAgcHk6IFwicGFkZGluZ1ZlcnRpY2FsXCIsXG59O1xuXG5jb25zdCBNQVJHSU5fVkFSSUFUSU9OUyA9IHtcbiAgbTogXCJtYXJnaW5cIixcbiAgbWw6IFwibWFyZ2luTGVmdFwiLFxuICBtdDogXCJtYXJnaW5Ub3BcIixcbiAgbXI6IFwibWFyZ2luUmlnaHRcIixcbiAgbWI6IFwibWFyZ2luQm90dG9tXCIsXG4gIG14OiBcIm1hcmdpbkhvcml6b250YWxcIixcbiAgbXk6IFwibWFyZ2luVmVydGljYWxcIixcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCBjb25zdCBNQVJHSU5fUEFERElOR19WQUxVRVMgPSB7XG4gIDA6IDAsXG4gIDE6IHBhZGRpbmdUaW55LFxuICAyOiBwYWRkaW5nWFNtbCxcbiAgMzogcGFkZGluZ01lZGl1bSxcbiAgNDogcGFkZGluZ1hYTGFyZ2UsXG59O1xuXG5leHBvcnQgdHlwZSBQYWRkaW5nTGl0ZXJhbHMgPSBrZXlvZiB0eXBlb2YgUEFERElOR19WQVJJQVRJT05TO1xuZXhwb3J0IHR5cGUgTmF0aXZlUGFkZGluZ0tleVR5cGUgPSB0eXBlb2YgUEFERElOR19WQVJJQVRJT05TW1BhZGRpbmdMaXRlcmFsc107XG5leHBvcnQgdHlwZSBWYWx1ZUxpdGVyYWxzID0ga2V5b2YgdHlwZW9mIE1BUkdJTl9QQURESU5HX1ZBTFVFUztcblxuY29uc3QgcGFkZGluZ0NsYXNzID0gZ2VuZXJhdGVTdHlsZVZhbHVlKFxuICBQQURESU5HX1ZBUklBVElPTlMsXG4gIE1BUkdJTl9QQURESU5HX1ZBTFVFU1xuKTtcblxuY29uc3QgbWFyZ2luQ2xhc3MgPSBnZW5lcmF0ZVN0eWxlVmFsdWUoXG4gIE1BUkdJTl9WQVJJQVRJT05TLFxuICBNQVJHSU5fUEFERElOR19WQUxVRVNcbik7XG5cbmNvbnN0IG1hcmdpblBhZGRpbmcgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIC4uLnBhZGRpbmdDbGFzcyxcbiAgLi4ubWFyZ2luQ2xhc3MsXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgbWFyZ2luUGFkZGluZztcbiJdfQ==